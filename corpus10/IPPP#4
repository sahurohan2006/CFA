PR.IP-3: Configuration change control processes are in place
CONFIGURATION CHANGE CONTROL
Control:
a. Determine and document the types of changes to the system that are configurationcontrolled;
b. Review proposed configuration-controlled changes to the system and approve or disapprove
such changes with explicit consideration for security and privacy impact analyses;
c. Document configuration change decisions associated with the system;
d. Implement approved configuration-controlled changes to the system;
Retain records of configuration-controlled changes to the system for [Assignment:
organization-defined time period];
f. Monitor and review activities associated with configuration-controlled changes to the
system; and
g. Coordinate and provide oversight for configuration change control activities through
[Assignment: organization-defined configuration change control element] that convenes
[Selection (one or more): [Assignment: organization-defined frequency]; when [Assignment:
organization-defined configuration change conditions]].
Discussion: Configuration change control for organizational systems involves the systematic
proposal, justification, implementation, testing, review, and disposition of system changes,
including system upgrades and modifications. Configuration change control includes changes to
baseline configurations, configuration items of systems, operational procedures, configuration
settings for system components, remediate vulnerabilities, and unscheduled or unauthorized
changes. Processes for managing configuration changes to systems include Configuration Control
Boards or Change Advisory Boards that review and approve proposed changes. For changes that
impact privacy risk, the senior agency official for privacy updates privacy impact assessments and
system of records notices. For new systems or major upgrades, organizations consider including
representatives from the development organizations on the Configuration Control Boards or
Change Advisory Boards. Auditing of changes includes activities before and after changes are
made to systems and the auditing activities required to implement such changes
CONFIGURATION CHANGE CONTROL | AUTOMATED DOCUMENTATION, NOTIFICATION, AND
PROHIBITION OF CHANGES
Use [Assignment: organization-defined automated mechanisms] to:
(a) Document proposed changes to the system;
(b) Notify [Assignment: organization-defined approval authorities] of proposed changes
to the system and request change approval;
(c) Highlight proposed changes to the system that have not been approved or
disapproved within [Assignment: organization-defined time period];
(d) Prohibit changes to the system until designated approvals are received;
(e) Document all changes to the system; and
(f) Notify [Assignment: organization-defined personnel] when approved changes to the
system are completed.
CONFIGURATION CHANGE CONTROL | TESTING, VALIDATION, AND DOCUMENTATION OF CHANGES
Test, validate, and document changes to the system before finalizing the implementation
of the changes.
Discussion: Changes to systems include modifications to hardware, software, or firmware
components and configuration settings defined in CM-6. Organizations ensure that testing
does not interfere with system operations that support organizational mission and business
functions. Individuals or groups conducting tests understand security and privacy policies
and procedures, system security and privacy policies and procedures, and the health, safety,
and environmental risks associated with specific facilities or processes. Operational systems
may need to be taken offline, or replicated to the extent feasible, before testing can be
conducted. If systems must be taken offline for testing, the tests are scheduled to occur
during planned system outages whenever possible. If the testing cannot be conducted on
operational systems, organizations employ compensating controls.
CONFIGURATION CHANGE CONTROL | AUTOMATED CHANGE IMPLEMENTATION
Implement changes to the current system baseline and deploy the updated baseline across
the installed base using [Assignment: organization-defined automated mechanisms].
Discussion: Automated tools can improve the accuracy, consistency, and availability of
configuration baseline information. Automation can also provide data aggregation and data
correlation capabilities, alerting mechanisms, and dashboards to support risk-based
decision-making within the organization
CONFIGURATION CHANGE CONTROL | SECURITY AND PRIVACY REPRESENTATIVES
Require [Assignment: organization-defined security and privacy representatives] to be
members of the [Assignment: organization-defined configuration change control element].
Discussion: Information security and privacy representatives include system security
officers, senior agency information security officers, senior agency officials for privacy, or
system privacy officers. Representation by personnel with information security and privacy
expertise is important because changes to system configurations can have unintended side
effects, some of which may be security- or privacy-relevant. Detecting such changes early in
the process can help avoid unintended, negative consequences that could ultimately affect
the security and privacy posture of systems. The configuration change control element
referred to in the second organization-defined parameter reflects the change control
elements defined by organizations in CM-3g.
CONFIGURATION CHANGE CONTROL | AUTOMATED SECURITY RESPONSE
Implement the following security responses automatically if baseline configurations are
changed in an unauthorized manner: [Assignment: organization-defined security
responses].
Discussion: Automated security responses include halting selected system functions, halting
system processing, and issuing alerts or notifications to organizational personnel when there
is an unauthorized modification of a configuration item.
CONFIGURATION CHANGE CONTROL | CRYPTOGRAPHY MANAGEMENT
Ensure that cryptographic mechanisms used to provide the following controls are under
configuration management: [Assignment: organization-defined controls].
Discussion: The controls referenced in the control enhancement refer to security and
privacy controls from the control catalog. Regardless of the cryptographic mechanisms
employed, processes and procedures are in place to manage those mechanisms. For
example, if system components use certificates for identification and authentication, a
process is implemented to address the expiration of those certificates.
CONFIGURATION CHANGE CONTROL | REVIEW SYSTEM CHANGES
Review changes to the system [Assignment: organization-defined frequency] or when
[Assignment: organization-defined circumstances] to determine whether unauthorized
changes have occurred.
Discussion: Indications that warrant a review of changes to the system and the specific
circumstances justifying such reviews may be obtained from activities carried out by
organizations during the configuration change process or continuous monitoring process
CONFIGURATION CHANGE CONTROL | PREVENT OR RESTRICT CONFIGURATION CHANGES
Prevent or restrict changes to the configuration of the system under the following
circumstances: [Assignment: organization-defined circumstances].
Discussion: System configuration changes can adversely affect critical system security and
privacy functionality. Change restrictions can be enforced through automated mechanisms.
IMPACT ANALYSES
Control: Analyze changes to the system to determine potential security and privacy impacts
prior to change implementation.
Discussion: Organizational personnel with security or privacy responsibilities conduct impact
analyses. Individuals conducting impact analyses possess the necessary skills and technical
expertise to analyze the changes to systems as well as the security or privacy ramifications.
Impact analyses include reviewing security and privacy plans, policies, and procedures to
understand control requirements; reviewing system design documentation and operational
procedures to understand control implementation and how specific system changes might affect
the controls; reviewing the impact of changes on organizational supply chain partners with
stakeholders; and determining how potential changes to a system create new risks to the privacy
of individuals and the ability of implemented controls to mitigate those risks. Impact analyses
also include risk assessments to understand the impact of the changes and determine if
additional controls are required.
IMPACT ANALYSES | SEPARATE TEST ENVIRONMENTS
Analyze changes to the system in a separate test environment before implementation in
an operational environment, looking for security and privacy impacts due to flaws,
weaknesses, incompatibility, or intentional malice.
Discussion: A separate test environment requires an environment that is physically or
logically separate and distinct from the operational environment. The separation is sufficient
to ensure that activities in the test environment do not impact activities in the operational
environment and that information in the operational environment is not inadvertently
transmitted to the test environment. Separate environments can be achieved by physical or
logical means. If physically separate test environments are not implemented, organizations
determine the strength of mechanism required when implementing logical separation.
IMPACT ANALYSES | VERIFICATION OF CONTROLS
After system changes, verify that the impacted controls are implemented correctly,
operating as intended, and producing the desired outcome with regard to meeting the
security and privacy requirements for the system.
Discussion: Implementation in this context refers to installing changed code in the
operational system that may have an impact on security or privacy controls
DEVELOPER CONFIGURATION MANAGEMENT
Control: Require the developer of the system, system component, or system service to:
a. Perform configuration management during system, component, or service [Selection (one or
more): design; development; implementation; operation; disposal];
b. Document, manage, and control the integrity of changes to [Assignment: organizationdefined configuration items under configuration management];
c. Implement only organization-approved changes to the system, component, or service;
Document approved changes to the system, component, or service and the potential
security and privacy impacts of such changes; and
e. Track security flaws and flaw resolution within the system, component, or service and report
findings to [Assignment: organization-defined personnel].
Discussion: Organizations consider the quality and completeness of configuration management
activities conducted by developers as direct evidence of applying effective security controls.
Controls include protecting the master copies of material used to generate security-relevant
portions of the system hardware, software, and firmware from unauthorized modification or
destruction. Maintaining the integrity of changes to the system, system component, or system
service requires strict configuration control throughout the system development life cycle to
track authorized changes and prevent unauthorized changes.
The configuration items that are placed under configuration management include the formal
model; the functional, high-level, and low-level design specifications; other design data;
implementation documentation; source code and hardware schematics; the current running
version of the object code; tools for comparing new versions of security-relevant hardware
descriptions and source code with previous versions; and test fixtures and documentation.
Depending on the mission and business needs of organizations and the nature of the contractual
relationships in place, developers may provide configuration management support during the
operations and maintenance stage of the system development life cycle
DEVELOPER CONFIGURATION MANAGEMENT | SOFTWARE AND FIRMWARE INTEGRITY VERIFICATION
Require the developer of the system, system component, or system service to enable
integrity verification of software and firmware components.
Discussion: Software and firmware integrity verification allows organizations to detect
unauthorized changes to software and firmware components using developer-provided
tools, techniques, and mechanisms. The integrity checking mechanisms can also address
counterfeiting of software and firmware components. Organizations verify the integrity of
software and firmware components, for example, through secure one-way hashes provided
by developers. Delivered software and firmware components also include any updates to
such components.
DEVELOPER CONFIGURATION MANAGEMENT | ALTERNATIVE CONFIGURATION MANAGEMENT
PROCESSES
Provide an alternate configuration management process using organizational personnel in
the absence of a dedicated developer configuration management team.
Discussion: Alternate configuration management processes may be required when
organizations use commercial off-the-shelf information technology products. Alternate
configuration management processes include organizational personnel who review and
approve proposed changes to systems, system components, and system services and
conduct security and privacy impact analyses prior to the implementation of changes to
systems, components, or services.
DEVELOPER CONFIGURATION MANAGEMENT | HARDWARE INTEGRITY VERIFICATION
Require the developer of the system, system component, or system service to enable
integrity verification of hardware components.
Discussion: Hardware integrity verification allows organizations to detect unauthorized
changes to hardware components using developer-provided tools, techniques, methods, and
mechanisms. Organizations may verify the integrity of hardware components with hard-tocopy labels, verifiable serial numbers provided by developers, and by requiring the use of
anti-tamper technologies. Delivered hardware components also include hardware and
firmware updates to such components.
DEVELOPER CONFIGURATION MANAGEMENT | TRUSTED GENERATION
Require the developer of the system, system component, or system service to employ
tools for comparing newly generated versions of security-relevant hardware descriptions,
source code, and object code with previous versions.
Discussion: The trusted generation of descriptions, source code, and object code addresses
authorized changes to hardware, software, and firmware components between versions
during development. The focus is on the efficacy of the configuration management process
by the developer to ensure that newly generated versions of security-relevant hardware
descriptions, source code, and object code continue to enforce the security policy for the
system, system component, or system service. In contrast, SA-10(1) and SA-10(3) allow
organizations to detect unauthorized changes to hardware, software, and firmware
components using tools, techniques, or mechanisms provided by developers.
DEVELOPER CONFIGURATION MANAGEMENT | MAPPING INTEGRITY FOR VERSION CONTROL
Require the developer of the system, system component, or system service to maintain
the integrity of the mapping between the master build data describing the current version
of security-relevant hardware, software, and firmware and the on-site master copy of the
data for the current version.
Discussion: Mapping integrity for version control addresses changes to hardware, software,
and firmware components during both initial development and system development life
cycle updates. Maintaining the integrity between the master copies of security-relevant
hardware, software, and firmware (including designs, hardware drawings, source code) and
the equivalent data in master copies in operational environments is essential to ensuring the
availability of organizational systems that support critical mission and business functions
DEVELOPER CONFIGURATION MANAGEMENT | TRUSTED DISTRIBUTION
Require the developer of the system, system component, or system service to execute
procedures for ensuring that security-relevant hardware, software, and firmware updates
distributed to the organization are exactly as specified by the master copies.
Discussion: The trusted distribution of security-relevant hardware, software, and firmware
updates help to ensure that the updates are correct representations of the master copies
maintained by the developer and have not been tampered with during distribution.
DEVELOPER CONFIGURATION MANAGEMENT | SECURITY AND PRIVACY REPRESENTATIVES
Require [Assignment: organization-defined security and privacy representatives] to be
included in the [Assignment: organization-defined configuration change management and
control process].
Discussion: Information security and privacy representatives can include system security
officers, senior agency information security officers, senior agency officials for privacy, and
system privacy officers. Representation by personnel with information security and privacy
expertise is important because changes to system configurations can have unintended side
effects, some of which may be security- or privacy-relevant. Detecting such changes early in
the process can help avoid unintended, negative consequences that could ultimately affect
the security and privacy posture of systems. The configuration change management and
control process in this control enhancement refers to the change management and control
process defined by organizations in SA-10b